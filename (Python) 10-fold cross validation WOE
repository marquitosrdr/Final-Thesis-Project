import os
os.chdir("C:\\Users\\Marcos Rusinol\\Desktop\\dataset")
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from keras import models
from keras import layers
from sklearn.metrics import confusion_matrix

# Importing the dataset
dataset = pd.read_csv('WOE_datasetpy.csv',sep=';')
print(dataset.shape)
dataset.iloc[:,1:10] = dataset.stack().str.replace(',','.').unstack()
pd.to_numeric(dataset.iloc[:,0], errors='coerce')
pd.to_numeric(dataset["State_woe"], errors='coerce')
pd.to_numeric(dataset.iloc[:,2], errors='coerce')
pd.to_numeric(dataset.iloc[:,3], errors='coerce')
pd.to_numeric(dataset.iloc[:,4], errors='coerce')
pd.to_numeric(dataset.iloc[:,5], errors='coerce')
pd.to_numeric(dataset.iloc[:,6], errors='coerce')
pd.to_numeric(dataset.iloc[:,7], errors='coerce')
pd.to_numeric(dataset.iloc[:,8], errors='coerce')
pd.to_numeric(dataset.iloc[:,9], errors='coerce')

#BALANCING DATASET
datasetdef = dataset.loc[dataset.Default == 1]
datasetnodef = dataset.loc[dataset.Default == 0]
datasetnodef = datasetnodef.sample(79768)
dataset = pd.concat([datasetdef, datasetnodef])

#dataset_part_1 = dataset.iloc[1:34347,:]
#dataset_part_2 = dataset.iloc[34347:68692,:]
#dataset_part_3 = dataset.iloc[68693:103038,:]
#dataset_part_4 = dataset.iloc[103039:137384,:]
#dataset_part_5 = dataset.iloc[137385:171730,:]
#dataset_part_6 = dataset.iloc[171731:206076,:]
#dataset_part_7 = dataset.iloc[206077:240422,:]
#dataset_part_8 = dataset.iloc[240423:274768,:]
#dataset_part_9 = dataset.iloc[274769:309114,:]
#dataset_part_10 = dataset.iloc[309115:343467,:]

dataset_part_1 = dataset.iloc[1:15953,:]
dataset_part_2 = dataset.iloc[15954:31906,:]
dataset_part_3 = dataset.iloc[31907:47859,:]
dataset_part_4 = dataset.iloc[47860:63812,:]
dataset_part_5 = dataset.iloc[63813:79765,:]
dataset_part_6 = dataset.iloc[79766:95718,:]
dataset_part_7 = dataset.iloc[95719:111671,:]
dataset_part_8 = dataset.iloc[111672:127624,:]
dataset_part_9 = dataset.iloc[127625:143577,:]
dataset_part_10 = dataset.iloc[143578:159530,:]

k1_train = pd.concat([dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_6,dataset_part_7,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X1_train = k1_train.iloc[:, 1:10].values
y1_train = k1_train.iloc[:, 0].values
k1_test = dataset_part_1
X1_test = k1_test.iloc[:, 1:10].values
y1_test = k1_test.iloc[:, 0].values

k2_train = pd.concat([dataset_part_1,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_6,dataset_part_7,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X2_train = k2_train.iloc[:, 1:10].values
y2_train = k2_train.iloc[:, 0].values
k2_test = dataset_part_2
X2_test = k2_test.iloc[:, 1:10].values
y2_test = k2_test.iloc[:, 0].values

k3_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_4,dataset_part_5,dataset_part_6,dataset_part_7,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X3_train = k3_train.iloc[:, 1:10].values
y3_train = k3_train.iloc[:, 0].values
k3_test = dataset_part_3
X3_test = k3_test.iloc[:, 1:10].values
y3_test = k3_test.iloc[:, 0].values

k4_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_5,dataset_part_6,dataset_part_7,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X4_train = k4_train.iloc[:, 1:10].values
y4_train = k4_train.iloc[:, 0].values
k4_test = dataset_part_4
X4_test = k4_test.iloc[:, 1:10].values
y4_test = k4_test.iloc[:, 0].values

k5_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_6,dataset_part_7,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X5_train = k5_train.iloc[:, 1:10].values
y5_train = k5_train.iloc[:, 0].values
k5_test = dataset_part_5
X5_test = k5_test.iloc[:, 1:10].values
y5_test = k5_test.iloc[:, 0].values

k6_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_7,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X6_train = k6_train.iloc[:, 1:10].values
y6_train = k6_train.iloc[:, 0].values
k6_test = dataset_part_6
X6_test = k6_test.iloc[:, 1:10].values
y6_test = k6_test.iloc[:, 0].values

k7_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_6,
                      dataset_part_8,dataset_part_9,dataset_part_10])
X7_train = k7_train.iloc[:, 1:10].values
y7_train = k7_train.iloc[:, 0].values
k7_test = dataset_part_7
X7_test = k7_test.iloc[:, 1:10].values
y7_test = k7_test.iloc[:, 0].values

k8_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_6,
                      dataset_part_7,dataset_part_9,dataset_part_10])
X8_train = k8_train.iloc[:, 1:10].values
y8_train = k8_train.iloc[:, 0].values
k8_test = dataset_part_8
X8_test = k8_test.iloc[:, 1:10].values
y8_test = k8_test.iloc[:, 0].values

k9_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_6,
                      dataset_part_7,dataset_part_8,dataset_part_10])
X9_train = k9_train.iloc[:, 1:10].values
y9_train = k9_train.iloc[:, 0].values
k9_test = dataset_part_9
X9_test = k9_test.iloc[:, 1:10].values
y9_test = k9_test.iloc[:, 0].values

k10_train = pd.concat([dataset_part_1,dataset_part_2,dataset_part_3,dataset_part_4,dataset_part_5,dataset_part_6,
                       dataset_part_7,dataset_part_8,dataset_part_9])
X10_train = k10_train.iloc[:, 1:10].values
y10_train = k10_train.iloc[:, 0].values
k10_test = dataset_part_10
X10_test = k10_test.iloc[:, 1:10].values
y10_test = k10_test.iloc[:, 0].values

X_train_cross = [X1_train,X2_train,X3_train,X4_train,X5_train,X6_train,X7_train,X8_train,X9_train,X10_train]
y_train_cross = [y1_train,y2_train,y3_train,y4_train,y5_train,y6_train,y7_train,y8_train,y9_train,y10_train]
X_test_cross = [X1_test,X2_test,X3_test,X4_test,X5_test,X6_test,X7_test,X8_test,X9_test,X10_test]
y_test_cross = [y1_test,y2_test,y3_test,y4_test,y5_test,y6_test,y7_test,y8_test,y9_test,y10_test]

hidden1 = [8,30,58]
hidden2 = [30,58,511]
nhidden1 = len(hidden1)
nhidden2 = len(hidden2)
ncross = len(X_train_cross)
err = list()
acc = list()

for c in range(ncross):
    set_train_X = X_train_cross[c]
    set_train_y = y_train_cross [c]
    set_test_X = X_test_cross [c]
    set_test_y = y_test_cross[c]
    for i in range(nhidden1):
        N1 = hidden1[i]
        print("N1",N1)
        for j in range(nhidden2):
            N2 = hidden2[j]
            classifier = models.Sequential()
            classifier.add(layers.Dense(output_dim = 10, init = 'uniform', input_dim = 9, activation = 'relu'))
            classifier.add(layers.Dense(output_dim = N1, init = 'uniform',activation = 'relu'))
            classifier.add(layers.Dense(output_dim = N2, init='uniform', activation = 'relu'))
            classifier.add(layers.Dense(output_dim = 1, init = 'uniform', activation = 'sigmoid'))
            classifier.compile(optimizer = 'rmsprop', loss = 'binary_crossentropy', metrics = ['accuracy'])
            history = classifier.fit(set_train_X, set_train_y, batch_size = 100, nb_epoch = 30)
            err.append(history.history['loss'][29])
            acc.append(history.history['acc'][29])
print(err)
print(acc)
